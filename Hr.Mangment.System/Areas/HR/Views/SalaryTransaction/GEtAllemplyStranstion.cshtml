@model PagedList.IPagedList<HR.ViewModel.SalaryTransactionVM>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "_Layout";
    ViewData["Title"] = "  Mange SalaryTransaction";
}

<h2>@ViewData["Title"]</h2>

<!-- Add the search input form -->
<form id="search-form" method="get" action="@Url.Action("Index")">
    <input type="text" name="search" value="@ViewBag.Search" placeholder="Search..." id="search-input">
</form>
<partial name="_AlertMessage" model="Model" />

<a asp-controller="SalaryTransaction" asp-action="Save" data-action="edit" class="btn btn-primary">
    <i class="fas fa-plus"></i> Add New
</a>
<div id="search-results">
    <table class="table bg-primary table-hover">
        <thead>
            <tr>
                <th>Reason</th>
                <th>TransactionType</th> <!-- Corrected the case for "TransactionType" -->
                <th>TransactionDate</th>
                <th>EmployeeName</th>
                <td>Action</td>
            </tr>
        </thead>
        <tbody id="patientTableBody">
            @foreach (var patient in Model)
            {
                <tr class="patient">
                    <td>@patient.Reason</td>
                    <td>@patient.transactionTyp</td> <!-- Corrected the case for "TransactionType" -->
                    <td>@patient.TransactionDate</td>
                    <td>@patient.EmployeeName</td>
                    <td>
                        <a asp-controller="SalaryTransaction" asp-action="Save" asp-route-id="@patient.Id" data-action="edit" class="btn btn-primary">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a asp-area="HR" asp-controller="SalaryTransaction" asp-action="Delete" asp-route-id="@patient.Id" data-action="delete" class="btn btn-danger">
                            <i class="fas fa-trash-alt"></i> Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<partial name="_PaginationPartial" model="Model" />

<!-- JavaScript to handle search input -->
<script>
    // Get the search input element
    const searchInput = document.getElementById('search-input');

    // Get the patient rows
    const patientRows = document.querySelectorAll('.patient');

    // Function to update the search results
    function updateSearchResults() {
        const searchText = searchInput.value.toLowerCase();

        patientRows.forEach(patientRow => {
            const patientText = patientRow.textContent.toLowerCase();
            if (patientText.includes(searchText)) {
                patientRow.style.display = 'table-row';
            } else {
                patientRow.style.display = 'none';
            }
        });
    }

    // Add an event listener to the search input to listen for input changes
    searchInput.addEventListener('input', function () {
        updateSearchResults();
    });

    // Initial call to populate search results
    updateSearchResults();
</script>
