@model PagedList.IPagedList<HR.ViewModel.EmployeeTrininTVm>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "_Layout";
    ViewData["Title"] = "All Employee Shifts";
}

<h2>@ViewData["Title"]</h2>

<!-- Add the search input form -->
<form id="search-form" method="get" action="@Url.Action("Index")">
    <input type="text" name="search" value="@ViewBag.Search" placeholder="Search..." id="search-input">
</form>
<partial name="_AlertMessage" model="Model" />


<div id="search-results">
    <table class="table">
        <thead>
            <tr>
                <th>number </th>
                <th>DeviceName</th>

                <td>Action</td>
            </tr>
        </thead>
        <tbody id="patientTableBody">
            @foreach (var patient in Model)
            {
                <tr class="patient">
                    <td>@patient.EmployeeName</td>
                    <td>@patient.Name</td>

                    <td>

                        <a asp-controller="EmployeeTrining" asp-action="Save" asp-route-id="@patient.Id" data-action="edit">
                            <i class="fas fa-edit" title="Edit"></i>Edit
                        </a>
                        <a asp-area="HR" asp-controller="EmployeeTrining" asp-action="Delete" asp-route-id="@patient.Id" data-action="delete">
                            <i class="fas fa-trash-alt" title="Delete"></i>Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <a asp-controller="Employee" asp-action="Index" class="btn btn-secondary mt-2">
        <i class="fas fa-chevron-circle-left"></i> Back Home
    </a>
</div>


<partial name="_PaginationPartial" model="Model" />

<!-- JavaScript to handle search input -->
<script>
    // Get the search input element
    const searchInput = document.getElementById('search-input');

    // Get the patient rows
    const patientRows = document.querySelectorAll('.patient');

    // Function to update the search results
    function updateSearchResults() {
        const searchText = searchInput.value.toLowerCase();

        patientRows.forEach(patientRow => {
            const patientText = patientRow.textContent.toLowerCase();
            if (patientText.includes(searchText)) {
                patientRow.style.display = 'table-row';
            } else {
                patientRow.style.display = 'none';
            }
        });
    }

    // Add an event listener to the search input to listen for input changes
    searchInput.addEventListener('input', function () {
        updateSearchResults();
    });

    // Initial call to populate search results
    updateSearchResults();
</script>
